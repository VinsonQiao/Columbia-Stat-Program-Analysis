2019<-read.csv("2019application.csv",header=FALSE, encoding = "UTF-8")
2019<-read.csv("2019application.csv",header=FALSE, encoding = "UTF-8")
2019<-read.csv("2019application.csv",header=FALSE, encoding = "UTF-8")
read.csv("2019application.csv",header=FALSE, encoding = "UTF-8")
2019Application<-read.csv("2019application.csv",header=FALSE, encoding = "UTF-8")
Application_this_year<-read.csv("2019application.csv",header=FALSE, encoding = "UTF-8")
Application_this_year
GPA<-Application_this_year[,1]%>%filter(.,.!=NA)
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
library(ggplot2)
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
library(ggplot2)
library(tidyr)
library(dplyr)
library(wordcloud2)
install.packages("ggplot2")
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
library(tidyr)
library(dplyr)
library(wordcloud2)
GPA<-Application_this_year[,1]%>%filter(.,.!=NA)
GPA<-Application_this_year[,1]%>%filter(.,.[,1]!=NA)
GPA<-filter(Application_this_year,Application_this_year[,1]!=NA)%>%.[,1]
GPA
filter(Application_this_year,Application_this_year[,1]!=NA)
filter(Application_this_year,Application_this_year[,1]!=NA)
Application_this_year[,1]
filter(Application_this_year,is.na(Application_this_year[,1]) ==FALSE)
GPA<-filter(Application_this_year,is.na(Application_this_year[,1]) ==FALSE)%>%.[,1]
GPA
TOFEL<-filter(Application_this_year,is.na(Application_this_year[,3]) ==FALSE)%>%.[,3]
TOFEL
GRE
GRE
GRE<-filter(Application_this_year,is.na(Application_this_year[,2]) ==FALSE)%>%.[,2]
GRE
University<-filter(Application_this_year,is.na(Application_this_year[,4]) ==FALSE)%>%.[,4]
University
filter(Application_this_year,Application_this_year[,4] !="")%>%.[,4]
University<-filter(Application_this_year,Application_this_year[,4] !="")%>%.[,4]
ggplot(GPA, aes(x = GPA[,1])) +
geom_histogram(bins = 0.1, colour = "#80593D", fill = "#9FC29F", boundary = 0)
GPA<-filter(Application_this_year,is.na(Application_this_year[,1]) ==FALSE)%>%.[,1]%>%as.data.frame()
GRE<-filter(Application_this_year,is.na(Application_this_year[,2]) ==FALSE)%>%.[,2]%>%as.data.frame()
TOFEL<-filter(Application_this_year,is.na(Application_this_year[,3]) ==FALSE)%>%.[,3]%>%as.data.frame()
University<-filter(Application_this_year,Application_this_year[,4] !="")%>%.[,4]%>%as.data.frame()
ggplot(GPA, aes(x = GPA[,1])) +
geom_histogram(bins = 0.1, colour = "#80593D", fill = "#9FC29F", boundary = 0)
GPA
ggplot(GPA, aes(x = GPA[,1])) +
geom_histogram( colour = "#80593D", fill = "#9FC29F")
ggplot(GPA, aes(x = GPA[,1])) +
geom_histogram( colour = "#80593D", fill = "#9FC29F")+
ggtitle("Distribution of GPA ")+
Xlab("GPA")+
ylab("Number")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(GPA, aes(x = GPA[,1])) +
geom_histogram( colour = "#80593D", fill = "#9FC29F")+
ggtitle("Distribution of GPA ")+
xlab("GPA")+
ylab("Number")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(GPA, aes(x = GPA[,1])) +
geom_histogram( colour = "#80593D", fill = "#9FC29F",binwidth = 0.05)+
ggtitle("Distribution of GPA ")+
xlab("GPA")+
ylab("Number")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(GRE, aes(x = GRE[,1])) +
geom_histogram( colour = "#80593D", fill = "#9FC29F",binwidth = 1)+
ggtitle("Distribution of GRE ")+
xlab("GRE")+
ylab("Number")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(GRE, aes(x = GRE[,1])) +
geom_histogram( colour = "#80593D", fill = "#9FC29F",binwidth = 2)+
ggtitle("Distribution of GRE ")+
xlab("GRE")+
ylab("Number")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(TOFEL, aes(x = TOFEL[,1])) +
geom_histogram( colour = "#80593D", fill = "#9FC29F",binwidth = 3)+
ggtitle("Distribution of TOFEL ")+
xlab("TOFEL")+
ylab("Number")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(TOFEL, aes(x = TOFEL[,1])) +
geom_histogram( colour = "#80593D", fill = "#9FC29F",binwidth = 2)+
ggtitle("Distribution of TOFEL ")+
xlab("TOFEL")+
ylab("Number")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(TOFEL, aes(x = TOFEL[,1])) +
geom_histogram( colour = "#80593D", fill = "#9FC29F",binwidth = 1)+
ggtitle("Distribution of TOFEL ")+
xlab("TOFEL")+
ylab("Number")+
theme(plot.title = element_text(hjust = 0.5))
jobs<-read.csv("Clean_job_data.csv",header=FALSE, encoding = "UTF-8")
Withjobs<-filter(jobs,jobs[,1] != "求职")
jobs_table<-sort(table(Withjobs),decreasing = T)
jobs_table
jobs_df<-jobs_table%>%as.data.frame()
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
library(ggplot2)
library(tidyr)
library(dplyr)
library(wordcloud2)
jobs<-read.csv("Clean_job_data.csv",header=FALSE, encoding = "UTF-8")
Withjobs<-filter(jobs,jobs[,1] != "求职")
jobs_table<-sort(table(Withjobs),decreasing = T)
jobs_table
jobs_df<-jobs_table%>%as.data.frame()
wordcloud2(jobs_table, size = 1,color = "random-light", backgroundColor = "grey")
wordcloud2(jobs_table, size = 1,color = "random-light", backgroundColor = "grey")
data_1<-read.csv("性别地区cleandata.csv",header=FALSE, encoding = "UTF-8")
dim(data_1)
#Sex Dist, "1" means male, "2" mean female
Male<-dim(filter(data_1,data_1[,1]==1))[1]
Female<-dim(filter(data_1,data_1[,1]==2))[1]
pie(c(124,161),labels = c("43.5%","56.5%") ,col = c("skyblue","pink"),main = "2018届性别分布" )
legend("topright",c("Male","Female"),cex = 0.85, fill = c("skyblue","pink"))
Province<-sort(table(data_1[,2])[-1],decreasing = T)
City<-sort(table(data_1[,3])[-1],decreasing = T)
Province<-data.frame(Province)
City<-data.frame(City)
wordcloud2(Province,color = "random-dark", backgroundColor = "pink",size = 1)
wordcloud2(City, size = 2,color = "random-light", backgroundColor = "lightblue")
wordcloud2
wordcloud2(Province,color = "random-dark", backgroundColor = "pink",size = 1)
wordcloud2(City, size = 2,color = "random-light", backgroundColor = "lightblue")
City<-data.frame(City)
City
City
